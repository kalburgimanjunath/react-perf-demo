{"version":3,"sources":["components/Sidebar.js","components/jobs.js","components/learning.js","components/LandingPage.js","components/category.js","components/Loadfile.js","components/gists.js","components/Profile.js","components/NewTable.js","components/List.js","components/ModalISP.js","components/Performance.js","components/TestData.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","useState","collapsed","setCollapsed","className","Navbar","color","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Jobs","title","designation","skills","description","map","item","key","Learning","subtitle","tags","image","src","width","alt","Category","LoadFile","state","file","fetch","this","props","url","then","res","text","setState","children","Component","Gists","gists","console","log","json","gist","id","to","path","render","match","find","g","params","gistId","Gist","Object","keys","files","raw_url","Profile","profile","Promise","all","name","location","avatar_url","followers","following","public_repos","recorddata","Table","hover","md","postId","email","body","Card","CardBody","CardTitle","CardSubtitle","CardText","ModalISP","buttonLabel","modalTitle","modal","setModal","toggle","localstore","JSON","parse","stringify","localStorage","tempData","values","arrData","push","Button","Modal","ModalHeader","ModalBody","profilerId","mode","actualTime","baseTime","startTime","commitTime","ModalFooter","Performance","analyticsdata","testdata","setItem","response","Container","loadData","Row","Col","xs","sm","onRender","clockPerformance","TestData","Main","LandingPage","App","Boolean","window","hostname","ReactDOM","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ea592f81.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nfunction Sidebar() {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      \r\n      <Navbar color=\"light\" expand=\"md\">\r\n        <NavbarBrand href=\"/\" className=\"mr-auto\">Brand Icon</NavbarBrand>\r\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n        <Collapse isOpen={!collapsed} navbar>\r\n          <Nav navbar>\r\n           \r\n            <NavItem>\r\n            <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n            <NavLink href=\"/testdata\">TestData</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n            <NavLink href=\"/performance\">Performance</NavLink>\r\n            </NavItem>\r\n           \r\n            \r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Sidebar);\r\n","import React from 'react';\r\n// import {JOBS} from '../assets/mock/jobs.json'\r\nfunction Jobs() {\r\n  const JOBS = [{\r\n      title:'front end developer',\r\n      designation:'lead developer',\r\n      skills:'react,angular,nodejs,jekyll',\r\n      description:'lorem param lorem param  lorem param'\r\n    },  \r\n    {\r\n        title:'UI developer',\r\n        designation:'lead developer',\r\n        skills:'react,angular,nodejs,jekyll,html,css',\r\n        description:'lorem param lorem param  lorem param'\r\n    },    \r\n    ]\r\n  return (\r\n    <div className=\"jobs\">\r\n        {JOBS.map((item)=>{\r\n            return <div key={item.title}>\r\n            <div>Job title:{item.title}</div>\r\n            <div>Job designation:{item.title}</div>\r\n            <div>Skills required:{item.skills}</div>\r\n            <div>Job description:{item.description}</div>\r\n            <div><button>Apply</button></div>\r\n        </div>\r\n        })}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jobs;\r\n","import React from 'react';\r\n\r\nfunction Learning() {\r\n  const LESSONS = [{\r\n      title: 'Front end development with react',\r\n      subtitle: 'intro to react',\r\n      tags: 'react into,react basics,getting started',\r\n      image: 'https://picsum.photos/200/300',\r\n      description:'Lorem pasam'\r\n  },\r\n  {\r\n    title: 'Front end development with react plus',\r\n    subtitle: 'creating your first react app',\r\n    tags: 'react into,react basics,getting started,hello world',\r\n    image: 'https://picsum.photos/id/237/200/300',\r\n    description:'Lorem pasam'\r\n  } \r\n  ];\r\n  return (\r\n        <div className=\"learning\">  \r\n            {LESSONS.map((item)=>{\r\n                return <div key={item.title}>\r\n                    <div>title:{item.title}</div>\r\n                    <div>subtitle:{item.subtitle}</div>\r\n                    <div><img src={item.image} width=\"200\" alt={item.title} /></div>\r\n                    <div>tags:{item.tags}</div>\r\n                    <div>description:{item.description}</div>\r\n                    <div><button>Apply</button></div>\r\n                </div>  \r\n            })}      \r\n                  \r\n        </div>\r\n    );\r\n  }\r\n \r\n\r\nexport default Learning;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nfunction Category() {\r\n  return (\r\n    <div className=\"landingpage\">\r\n        <Nav navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n            <NavLink href=\"/testdata\">Test Data Page</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n            <NavLink href=\"/performance\">Summary Page</NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n\r\nfunction Category() {\r\n  return (\r\n    <div className=\"category\">\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import { Component } from 'react';\r\n\r\nclass LoadFile extends Component {\r\n  state = {\r\n    file: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(this.props.url)\r\n      .then(res => res.text())\r\n      .then(file => {\r\n        this.setState({ file })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { file } = this.state;\r\n\r\n    return (\r\n      file && this.props.children(file)\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadFile;","import React from 'react';\r\nimport {\r\n    Link, Route\r\n  } from \"react-router-dom\";\r\nimport LoadFile from './Loadfile'\r\nclass Gists extends React.Component {\r\n    state = {\r\n        gists:null\r\n    }\r\n    componentDidMount(){\r\n        console.log('method:componentdidmount called...')\r\n        fetch('https://api.github.com/gists')\r\n        .then(res=>res.json())\r\n        .then(gists =>{\r\n            this.setState({gists:gists})\r\n        })\r\n    }\r\n    render(){\r\n        const {gists} = this.state;\r\n        \r\n        return(\r\n            \r\n                <div className=\"Gists\">\r\n                    <h1>Gist List</h1>\r\n                    {gists ?(\r\n                        gists.map((gist)=>{\r\n                            return <div key={gist.id}>\r\n                                <Link to={'/gists/g/'+ gist.id}>{gist.id}</Link>\r\n                                </div>\r\n                        })\r\n                    ):(\r\n                        <div>Loading ... </div>\r\n                    )}    \r\n                    <Route path=\"/gists/g/:gistId\" render={\r\n                        ({match})=>{\r\n                            return <Gist gist={gists.find(g=>g.id===match.params.gistId)}/>\r\n                        }\r\n                    }>\r\n                    </Route>                   \r\n                </div>\r\n                \r\n          \r\n           \r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Gists;\r\n\r\nconst Gist = ({gist}) => {\r\n    return (\r\n        <div>\r\n        <h1>Welcome to Gist</h1>\r\n        <div>\r\n            {gist.description}\r\n        </div>\r\n        {Object.keys(gist.files).map((key)=>{\r\n            console.log(key)\r\n            return <li>\r\n                <b>{key}</b>\r\n                <LoadFile url={gist.files[key].raw_url}>\r\n                    {text => (\r\n                    <pre>{text}</pre>\r\n                    )}\r\n                </LoadFile>            \r\n            </li>\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass Profile extends React.Component {\r\n    state = {\r\n        profile:null\r\n    }\r\n    componentDidMount(){\r\n        console.log('method:componentdidmount called...')\r\n        Promise.all([\r\n            fetch('https://api.github.com/users/kalburgimanjunath'),\r\n            fetch('https://api.github.com/users/kalburgimanjunath')\r\n        ]).then(function (res) {\r\n            // Get a JSON object from each of the res\r\n            return Promise.all(res.map(function (res) {\r\n                console.log(res)\r\n                return res.json();\r\n            }));\r\n        })\r\n        // .then(res=>res.json())\r\n        .then(profile =>{\r\n            this.setState({profile:profile})\r\n        })\r\n    }\r\n    render(){\r\n        console.log('method:render() called...')\r\n        const {profile} = this.state;\r\n        console.log(profile)\r\n        \r\n        return(\r\n            \r\n                <div className=\"Profile\">\r\n                    <h1>My Profile from Github List</h1>\r\n                    <div>\r\n                       {\r\n                           profile ? (\r\n                            <div>\r\n                                <div>{profile.name}<span>:{profile.location}</span></div>\r\n                                <div><img src={profile.avatar_url} width=\"200\" alt=\"\" /></div>\r\n                                <div>\r\n                                    <div>Followers:<span>{profile.followers}</span></div>\r\n                                    <div>Following:<span>{profile.following}</span></div>\r\n                                    <div>Followers:<span>{profile.followers}</span></div>\r\n                                    <div>Repositories:<span>{profile.public_repos}</span></div>\r\n                                </div>\r\n                            </div>\r\n                           ):(\r\n                            <div>load.....</div>\r\n                           )                             \r\n                           \r\n                       }\r\n                        \r\n                        \r\n                   \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n          \r\n           \r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nfunction NewTable(props) {\r\n  const recorddata = props.recorddata;\r\n  return (\r\n      <>\r\n      {recorddata ? (\r\n        <Table hover md=\"6\">\r\n        <tbody>\r\n          <tr>\r\n              <th>Id</th>\r\n              <th>PostId</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Body</th>\r\n          </tr>\r\n\r\n          {recorddata.map((item)=>{\r\n              return <tr key={item.id}>\r\n              <td>{item.postId}</td>\r\n              <td>{item.id}</td>\r\n              <td>{item.name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.body}</td>\r\n              </tr>\r\n          })}\r\n          </tbody>\r\n      </Table>\r\n        ):(\r\n          <div>Still loading the data...</div>\r\n        )\r\n      }\r\n        \r\n      </>\r\n  );\r\n}\r\n\r\nexport default React.memo(NewTable);\r\n","import React from 'react';\r\nimport {\r\n    Card, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n  } from 'reactstrap';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction List(props) {\r\n    const recorddata = props.recorddata;\r\n  return (\r\n    <div className=\"list\">\r\n      <h1>List View</h1>\r\n      {recorddata.map((item)=>{\r\n            return (\r\n                <Card key={item.id}>\r\n                    <CardBody className=\"justify-content-start\">\r\n                        <CardTitle><Link to=\"\">{item.name}</Link></CardTitle>\r\n                        <CardSubtitle>{item.email}</CardSubtitle>\r\n                        <CardText>{item.body}</CardText>                    \r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n            \r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(List);\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ModalISP = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n    modalTitle\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  \r\n  const localstore = JSON.parse(JSON.stringify(localStorage));\r\n  const tempData = Object.values(localstore);\r\n  const arrData =[];\r\n  tempData.map((item)=>{\r\n    return arrData.push(JSON.parse(item)[0]);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"success\" onClick={toggle}>{buttonLabel}</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>       \r\n          {arrData ? (             \r\n              arrData.map((item)=>{\r\n                return (\r\n\r\n                  <div key={item.profilerId}>\r\n                    <div><b>Component:{item.profilerId}</b></div>\r\n                    <div>Mode:{item.mode}</div>\r\n                    <div>actualTime:{item.actualTime}</div>\r\n                    <div>baseTime:{item.baseTime}</div>\r\n                    <div>startTime:{item.startTime}</div>\r\n                    <div>commitTime:{item.commitTime}</div>\r\n                  </div>\r\n                )\r\n                \r\n              })\r\n            ):(\r\n              <div>Loading Performance data...</div>\r\n            )\r\n          }\r\n          \r\n          \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalISP;","import React, { Profiler } from \"react\";\r\nimport NewTable from './NewTable';\r\nimport List from './List';\r\nimport ModalISP from './ModalISP';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\n\r\nclass Performance extends React.Component { \r\n  \r\n  constructor(props){\r\n    super();;\r\n  }\r\n\r\n  state = {\r\n    recorddata:null,\r\n    analyticsdata:null\r\n  }\r\n\r\n  clockPerformance(profilerId, mode, actualTime, baseTime, startTime, commitTime) {  \r\n    let testdata = [];\r\n      \r\n    testdata.push({\r\n      profilerId, \r\n      mode, \r\n      actualTime, \r\n      baseTime, \r\n      startTime, \r\n      commitTime\r\n    })   \r\n    localStorage.setItem(profilerId, JSON.stringify(testdata));\r\n    \r\n  }\r\n\r\n  async loadData(){\r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/comments`);\r\n    const json = await response.json();\r\n    const localstore = JSON.parse(JSON.stringify(localStorage));\r\n    \r\n    this.setState({ \r\n      recorddata: json,\r\n      analyticsdata: localstore\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {recorddata,analyticsdata} = this.state;\r\n    return (\r\n        <>\r\n          <Container>\r\n            <Button onClick={()=>this.loadData()} >Start</Button>\r\n            <ModalISP buttonLabel=\"Check Performance\" modalTitle=\"Performance of Components\" testdata={analyticsdata}/>\r\n                 \r\n              {recorddata ?(\r\n               \r\n                <>\r\n                   <h2>Fetched Data from 2 component list and table</h2>\r\n                  <Row>\r\n                        \r\n                        <Col xs=\"6\" sm=\"4\" md=\"4\">\r\n                        <Profiler id=\"List\" onRender={this.clockPerformance}>\r\n                          <List recorddata = {recorddata}/>\r\n                        </Profiler>\r\n                        </Col>\r\n                        <Col xs=\"6\" sm=\"4\" md=\"8\">\r\n                          <Profiler id=\"Table\" onRender={this.clockPerformance}>\r\n                            <NewTable recorddata = {recorddata}/>                      \r\n                          </Profiler>\r\n                        </Col>\r\n                  </Row>\r\n                  \r\n                </>\r\n              ):(\r\n                <div>No Data Available click button to load data....</div>\r\n              )}\r\n             \r\n            \r\n           \r\n          </Container>\r\n            \r\n        </>\r\n      );\r\n    }\r\n}\r\nexport default Performance;\r\n\r\n","import React from \"react\";\r\nimport NewTable from './NewTable';\r\nimport List from './List';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass TestData extends React.Component {  \r\n  state = {\r\n    recorddata:null\r\n  }\r\n  async componentDidMount(){\r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/comments`);\r\n    const json = await response.json();\r\n    \r\n    this.setState({ \r\n      recorddata: json\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {recorddata} = this.state;\r\n    return (\r\n        <>\r\n            \r\n            <Container>\r\n            <h1>Table View</h1>\r\n              {recorddata ?(\r\n               \r\n                <>           \r\n                    <Row>\r\n                        <Col xs=\"6\" sm=\"4\" md=\"4\">\r\n                            <List recorddata = {recorddata}/> \r\n                        </Col>\r\n                        <Col xs=\"6\" sm=\"4\" md=\"4\">\r\n                            <NewTable recorddata = {recorddata}/>\r\n                        </Col>\r\n                    </Row>\r\n                                     \r\n                </>\r\n              ):(\r\n                <div>No Data Available to load....</div>\r\n              )}\r\n             \r\n            \r\n            </Container>\r\n            \r\n            \r\n        </>\r\n      );\r\n    }\r\n}\r\nexport default TestData;\r\n\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Jobs from './jobs';\r\nimport Learning from './learning';\r\nimport LandingPage from './LandingPage';\r\nimport Category from './category';\r\nimport Gists from './gists';\r\nimport Profile from './Profile';\r\nimport Performance from './Performance';\r\nimport TestData from './TestData';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nfunction Main() {\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n          <Router>\r\n            <aside>\r\n                <Sidebar/>\r\n            </aside>\r\n            <div>\r\n            <Switch>\r\n                \r\n                <Route path=\"/jobs\">\r\n                    <Jobs />\r\n                </Route>\r\n                <Route path=\"/learning\">\r\n                    <Learning />\r\n                </Route>\r\n                <Route path=\"/category\">\r\n                    <Category />\r\n                </Route>\r\n                <Route path=\"/gists\">\r\n                    <Gists />\r\n                </Route>\r\n                <Route path=\"/profile\">\r\n                    <Profile />\r\n                </Route>\r\n                <Route path=\"/performance\">\r\n                    <Performance />\r\n                </Route>\r\n                <Route path=\"/testdata\">\r\n                    <TestData />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <LandingPage />\r\n                </Route>\r\n            </Switch>\r\n                \r\n            </div>\r\n          </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}